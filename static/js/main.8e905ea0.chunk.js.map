{"version":3,"sources":["eth/web3.js","eth/factory.js","eth/election.js","components/OneElection.js","components/Elections.js","App.js","reportWebVitals.js","index.js"],"names":["web3","window","currentProvider","enable","Web3","provider","providers","HttpProvider","factory","eth","Contract","compiledContract","abi","election","address","a","OneElection","props","updateWinnerMessage","setState","statusMessage","Message","size","positive","state","winner","processRequest","index","load","getAccounts","accounts","methods","vote","send","from","gas","console","log","message","unload","endElection","endVoting","addr","desc","candList","activeIndex","isManager","electionStatus","this","ElectionObject","description","call","giveCandList","votingStatus","winnerCand","_winner","ORGANIZER","realManager","options","map","item","Button","disabled","color","onClick","content","Segment","Header","Accordion","hidden","Title","as","active","Icon","name","Content","Component","Election","messagesEndRef","React","createRef","scrollToBottom","current","scrollIntoView","behavior","onSubmit","event","preventDefault","_names","inputCand","split","createElection","inputDesc","electionAddress","getDeployedElections","_addr","listItems","loadFunction","unloadFunction","Container","style","paddingBottom","primary","floated","ref","Form","Input","type","placeholder","label","labelPosition","value","onChange","target","App","isLoading","async","rel","href","src","loading","margin","Menu","inverted","Item","position","fluid","align","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e905ea0.chunk.js","sourcesContent":["import Web3 from 'web3';\n\nlet web3;\n\nif(typeof window !== 'undefined' && typeof window.web3 !== 'undefined'){\n    // in the browser and metamask is running\n    // getting web3 instance from metamask\n    window.web3.currentProvider.enable();\n    web3 = new Web3(window.web3.currentProvider);\n} else {\n    // metamask not available\n    const provider = new Web3.providers\n        .HttpProvider('https://kovan.infura.io/v3/19b85f951b5a4440923fa8f61eb27245');\n    web3 = new Web3(provider);\n};\n\nexport default web3;\n\n","// Preconfigured instance of the contract\nimport web3 from './web3';\nimport compiledContract from './build/Factory.json';\n\nconst factory = new web3.eth.Contract(\n    compiledContract.abi,\n    '0x7DA8BB2B098D651634d877b91B3dcaFBbA484E6f'\n    // '0x3D60EB220FD98Bb53A251296412Ec47Cd5beA600'\n);\n\nexport default factory;","// Preconfigured instance of the contract\nimport web3 from './web3';\nimport compiledContract from './build/Election.json';\n\nexport default async function election (address){\n    return await new web3.eth.Contract(\n        compiledContract.abi,\n        address\n    );\n\n}","import React, { Component } from \"react\";\nimport { Segment, Icon, Header, Button, Message, Accordion } from \"semantic-ui-react\";\n\nimport ElectionObject from \"./../eth/election\"\nimport web3 from \"./../eth/web3\"\n\n\nexport default class OneElection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addr: props.addr,\n            desc: null,\n            election: null,\n            candList: [],\n            activeIndex: false,\n            isManager: false,\n            electionStatus: null,\n            statusMessage: null,\n            winner: \"---\",\n        }\n    }\n\n    updateWinnerMessage = async () => {\n        this.setState({\n            statusMessage: <Message size=\"huge\" positive>\n                Winner: <b>{this.state.winner}</b>\n            </Message>\n        });\n    }\n\n    async componentDidMount() {\n        try {\n            this.setState({\n                election: await ElectionObject(this.state.addr),\n            });\n            this.setState({\n                desc: await this.state.election.methods.description().call(),\n                candList: await this.state.election.methods.giveCandList().call(),\n                electionStatus: await this.state.election.methods.votingStatus().call()\n            });\n\n            if (this.state.electionStatus === true) {\n                this.setState({\n                    statusMessage: <Message >You can vote.</Message>\n                });\n            } else {\n                const _winner = await this.state.election.methods.winnerCand().call();\n                this.setState({\n                    winner: _winner,\n                });\n                await this.updateWinnerMessage();\n            }\n\n\n        } catch (err) {\n            console.log(\"Error occured. \", err.message);\n        }\n\n        // Implement check manager function\n        const realManager = await this.state.election.methods.ORGANIZER().call();\n        const accounts = await web3.eth.getAccounts();\n\n        if (accounts[0] === realManager) {\n            this.setState({ isManager: true });\n        }\n    }\n\n    processRequest = async (index) => {\n        // Signal parent for loading \n        this.props.load();\n\n        // Now process the transaction\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await this.state.election.methods.vote(index)\n                .send({\n                    from: accounts[0],\n                    gas: '1000000'\n                });\n        } catch (err) {\n            console.log(\"Error: \", err.message);\n        }\n\n        // Signal parent for stop loading\n        this.props.unload();\n    }\n\n    endElection = async () => {\n        // Signal parent for loading \n        this.props.load();\n\n        // Process the transaction\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await this.state.election.methods.endVoting()\n                .send({\n                    from: accounts[0],\n                    gas: '5000000'\n                });\n        } catch (err) {\n            console.log(\"Error: \", err.message);\n        }\n\n        // Signal parent for stop loading\n        this.props.unload();\n    }\n\n    render() {\n        const options = this.state.candList.map((item, index) => {\n            return (\n                <Button\n                    disabled={!this.state.electionStatus}\n                    color=\"secondary\"\n                    key={index}\n                    onClick={() => this.processRequest(index)}\n                    content={item}\n                />\n            );\n        });\n\n        return (\n            <Segment>\n                <Header>{this.state.desc}</Header>\n                <Segment>{options}</Segment>\n                {this.state.statusMessage}\n\n                <Accordion hidden={!this.state.isManager || this.state.votingStatus}>\n                    <Accordion.Title as='h1' active={this.state.activeIndex}\n                        onClick={() => { this.setState({ activeIndex: !this.state.activeIndex }) }}>\n                        <Icon name='dropdown' />\n                        Admin tools\n                    </Accordion.Title>\n                    <Accordion.Content active={this.state.activeIndex}>\n                        <Button onClick={this.endElection} color=\"red\">\n                            End Election\n                        </Button>\n                    </Accordion.Content>\n                </Accordion>\n            </Segment>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { Segment, Header, Button, Input, Form, Container, Message } from \"semantic-ui-react\";\n\nimport factory from \"./../eth/factory\"\nimport OneElection from \"./OneElection\";\nimport web3 from \"./../eth/web3\";\n\nexport default class Election extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            electionAddress: [],\n            inputCand: \"\",\n            inputDesc: \"\"\n        }\n    }\n\n    messagesEndRef = React.createRef();\n    scrollToBottom = () => {\n        this.messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n        \n        // Signal parent for loading \n        this.props.load();\n\n        // Now process the transaction\n        try {\n            const _names = this.state.inputCand.split(',');\n            const accounts = await web3.eth.getAccounts();\n            await factory.methods\n                .createElection(_names, this.state.inputDesc)\n                .send({\n                    from: accounts[0],\n                    gas: '5000000'\n                });\n        } catch (err) {\n\n        }\n\n        // Signal parent for stop loading\n        this.props.unload()\n    }\n\n    async componentDidMount() {\n        try {\n            const _addr = await factory.methods.getDeployedElections().call();\n            this.setState({ electionAddress: _addr });\n        } catch (err) {\n            console.log(err.message);\n        }\n    }\n\n    render() {\n        const listItems = this.state.electionAddress.map((addr, index) => \n        {  if( index > 7){\n            return (\n            <OneElection\n                key={addr}\n                loadFunction={this.loadFunction}\n                unloadFunction={this.unloadFunction}\n                addr={addr} \n                load={this.props.load}\n                unload={this.props.unload}\n                \n                />\n        )\n        }\n            });\n\n        return (\n            <Container>\n                <div style={{paddingBottom: '50px'}}>\n                    <Button\n                        onClick={this.scrollToBottom}\n                        primary floated=\"right\"\n                        content=\"HOST YOUR ELECTION\"\n                        />\n                </div>\n                {/* {listItems[listItems.length()] } */}\n                {console.log(listItems)}\n                {listItems}\n                <div ref={this.messagesEndRef} />\n\n                <Segment>\n                    <Form>\n                        <Header>\n                            Launch your own election\n                        </Header>\n                        <Message>\n                            Rules:\n                            <li>After registering the election, voting would immediately begin for all users.</li>\n                            <li>After registering the election, you won't be able to change any information about candidates.</li>\n                            <li>After registering the election, you can end the election simply by going under admin tool.</li>\n                            <li>Admin tools would only be visible to you, when you login as your admin account.</li>\n\n                        </Message>\n\n                        <Input\n                            type=\"text\"\n                            placeholder=\"National elections.\"\n                            label=\"Description\"\n                            labelPosition=\"left\"\n                            value={this.state.inputDesc}\n                            onChange={event => this.setState({ inputDesc: event.target.value })}\n                        />\n                        <br />\n                        <br />\n                        <Input\n                            type=\"text\"\n                            placeholder=\"name1,name2,name3\"\n                            label=\"Names, comma separated.\"\n                            labelPosition='left'\n                            value={this.state.inputCand}\n                            onChange={event => this.setState({ inputCand: event.target.value })}\n                        />\n                        <br />\n                        <br />\n\n                        <Button\n                            primary\n                            onClick={this.onSubmit}\n                            content=\"Start your election!\"\n                        />\n                        <br />\n                    </Form>\n                </Segment>\n            </Container>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Container, Menu, Message, Icon, Segment } from 'semantic-ui-react';\n\nimport Elections from \"./components/Elections\";\n\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: false\n\t\t}\n\t}\n\n\tload = ()=>{this.setState({isLoading: true});}\n\tunload = ()=>{this.setState({isLoading: false})}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<link async rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\n\t\t\t\t<script async src=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.js\" />\n\n\t\t\t\t<Segment loading={this.state.isLoading}>\n\n\n\t\t\t\t<Container style={{ margin: '20px' }}>\n\t\t\t\t\t<Menu inverted>\n\n\t\t\t\t\t\t<Menu.Item>\n\t\t\t\t\t\t\t<Icon name='cubes' />\n\n\t\t\t\t\t\t\tBRIDGE\n\t\t\t\t\t\t\t<br />Building Resources in Democracy, Governance and Elections\n\n\t\t\t\t\t\t</Menu.Item>\n\n\t\t\t\t\t\t<Menu.Item position='right'>\n\t\t\t\t\t\t\t{/* <Message negative>\n\n\t\t\t\t\t\t\t\t<b>ATTENTION !!!</b>\n\t\t\t\t\t\t\t\t<br />All transactions are demo transactions hosted on Kovan testing network.\n\t\t\t\t\t\t\t\t<br />Please switch your wallet to Kovan testing network.\n\t\t\t\t\t\t\t\t</Message> */}\n\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</Menu>\n\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Elections \n\t\t\t\t\t\tload={this.load}\n\t\t\t\t\t\tunload={this.unload}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\t\t\t\t<br />\n\n\t\t\t\t<Container fluid>\n\t\t\t\t\t<p style={{ align: 'center' }}></p>\n\t\t\t\t</Container>\n\n\t\t\t\t</Segment>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}